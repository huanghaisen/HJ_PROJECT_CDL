<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.2.xsd">  
    
	<!-- 导入Redis配置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
	   <!-- 最大分配的对象数  -->
       <property name="maxTotal" value="${cache.maxTotal}" />
       <!-- 最大能够保持idel状态的对象数 -->
       <property name="maxIdle" value="${cache.maxIdle}" />  
       <!-- 空闲连接多长时间后会被收回-->
       <property name="timeBetweenEvictionRunsMillis" value="3000"/>
       <!-- 多长时间检查一次连接池中空闲的连接  -->
       <property name="minEvictableIdleTimeMillis" value="3000"/>
       <!-- 当池内没有返回对象时，最大等待时间 -->
       <property name="maxWaitMillis" value="${cache.maxWaitMillis}" />
       <!-- 当调用borrow Object方法时，是否进行有效性检查 -->
       <property name="testOnBorrow" value="${cache.testOnBorrow}" />
       <property name="testOnReturn" value="${cache.testOnReturn}"/>
   </bean>
      
   	<bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
	  <property name="hostName"  value="${cache.ip}" />
	  <property name="port"  value="${cache.port}" />
	  <property name="password" value="${cache.pwd}"/>
	  <property name="timeout"  value="${cache.timeout}" />
	  <property name="usePool"  value="${cache.usepool}"/>
	  <property name="poolConfig"  ref="jedisPoolConfig" />
	 </bean>
   	
   	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">  
	     <property name="connectionFactory"   ref="connectionFactory" />
	     <property name="enableTransactionSupport" value="true" />
	     <property name="keySerializer">
	     	<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
	     </property>
	    <property name="stringSerializer">  
	         <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>  
	     </property>  
	    <property name="hashKeySerializer">  
	         <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>  
	     </property>  
	     <property name="valueSerializer">  
	         <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>  
	     </property>  
	     <property name="hashValueSerializer">  
	         <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>  
	     </property>  
	</bean> 
    
</beans>